/*
 * 1. 자바 설치
 *    jdk.java.net/archive/
 *    14~18
 * 2. Path : c:\jdk-17.02\bin -->실행 파일(java, javac)
 * 3. classpath : 자바에서 지원하는 라이브러리 사용
 *                .;\jdk-17.02\lib
 * --------------------
 * 4. 편집기 : eclipse.org -->가장 최신버전(JAVA, JAVAEE)
 *    Java SE (일반 자바 --> 자바실행도구, 라이브러리)
 *    Java EE (기업용 환경 ㅣ 웹)
 *    Java ME (모바일)-->X(Kotlin)
 * 5. STS(Spring,Spring-Boot), Oracle
 * ====================
 * 1) 자바 표현법
 *    슷지 관련
 *      정수
 *       = 10진법 10,20,,,
 *       = 8진법 012, 011
 *              달력-->01, 02, 03, 04 -->0xx
 *       = 16진법 0xFF, OxXX(사용 빈도 거의 없음)
 *      실수 : 10.5(8byte), 10.5F (4byte)
 *              double        float
 *     문자 관련
 *       ='' ->한 글자만 저장 가능 'AB'(X)->'A', 'B'
 *     문자열 관련 : 한 글자 이상 --> "ABC", "A",,
 *     논리 관련 : true/false
 *     ======================> 대소문자 구분, 문장 종료;
 *     ======================> 컴퓨터에 명령을 내리는 것
 *                             순차적으로 내린다(알고리즘)==> ;
 *                             int a=10; 4바이트 메모리를 만들고 10을 저장해라
 * 2) 주석 : 컴파일시 번역에서 제외가 되는 부분 = 분석하기 편함
 *         int a=90; //국어점수
 *         드래그 후 ctrl+shift+/, ctrl+shift+\(주석풀기)
 * 3) 문법 에러 사항
 *    1. ;
 *    2. main을 못찾는 경우 -> 메뉴 project 탭에 clean 선택
 *    3. 대소문자 구분
 *    -----------------클래스명(대문자 시작), 변수(소문자 시작), 메소드(소문자 시작)
 *    4. {}-->들여쓰기 
 *    5. 저장명-->10page
 * 4) 특징
 *   1. 운영체제의 독립적이다(모든 운영체제에서 컴파일된 파일이 동일)
 *   2. 객체지향 프로그램(6장~7장)
 *     = 재사용(상속, 포함) -> 새롭게 추사, 기존의 기능 변경
 *                           오버로드     오버라이딩
 *     = 데이터 보호 : 캡슐화
 *     = 유지 보수 목적
 *   3. 배우기가 쉽다 (포인터, 구조체, 상속)-->자바에서 생략
 *   4. 자동 메모리 관리
 *     malloc, free -->new, delete-->new, 가비지켈렉션
 *     System.gr() = 멀티미디어
 *   5. 동적 로딩
 *      프로젝트 : 클래스가 여러개가 있다 ==>필요시마다 로딩
 */
public class MainClass_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		  System.out.println("1"); 
		  System.out.println("2");
		 

	}

}
